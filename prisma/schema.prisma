// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum organizationType{
  retail
  wholesale
}


enum DiscountType{
  rate
  amount
}


model Role {
  @@map("roles")
  id Int @id() @default(autoincrement())
  name String @unique


   //relation
  users user[]
}


model organization {
  @@map("organizations")
  id Int @id @default(autoincrement())
  name String
  type organizationType @default(retail)
  adress String?
  phone String? @db.VarChar(15)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  //relation
  user user[]
  items_organization ItemsOrganization[]
}

model user {
  @@map("users")

  id Int @id @default(autoincrement())
  role_id Int
  organization_id Int
  name String
  email String @unique
  mobile String @unique @db.VarChar(15)
  password String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  role Role @relation(fields: [role_id] ,references: [id])
  organization organization @relation(fields: [organization_id] , references: [id])
}

model Items {
  @@map("items")

  id Int @id @default(autoincrement())
  name String @unique
  description String? @db.Text()
  quantity Int @default(0)
  price Float @default(0)
  discount_type DiscountType @default(rate)
  tax Float @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  items_organization ItemsOrganization[]
}

model ItemsOrganization{
  @@map("items_organization")
 //id Int @id @default(autoincrement())

  item_id Int
  organization_id Int

  @@id([item_id, organization_id])

  items Items @relation(fields: [item_id] , references: [id] , onDelete: Cascade)
  organization organization @relation(fields: [organization_id] , references: [id] ,onDelete: Cascade)
}

model customervendors {
  id Int @id @default(autoincrement())
  name String
  description String?
  email String? @unique
  phone String? @db.VarChar()
  street String?
  city String?
  district String?
  province String?
  isVendor Boolean
 createdAt DateTime @default(now()) @map("created_at")
 updatedAt DateTime @default(now()) @map("updated_at")

}
